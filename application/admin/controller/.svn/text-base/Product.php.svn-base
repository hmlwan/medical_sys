<?php
namespace app\admin\controller;

use app\admin\exception\AdminException;
use app\common\entity\Product as productModel;
use think\Db;
use think\Request;

class Product extends Admin
{
    /**
     * @power 产品管理|能源发生器列表
     * @rank 3
     */
    public function index(Request $request)
    {
        return $this->render('index', [
            'list' => productModel::paginate(15)
        ]);
    }

    /**
     * @power 产品管理|能源发生器列表@上架能源发生器
     * @method POST
     */
    public function downShelve($id)
    {
        $entity = $this->checkInfo($id);
        $entity->status = 1;

        if (!$entity->save()) {
            throw new AdminException('上架失败');
        }
        return json(['code' => 0, 'message' => 'success']);
    }

    /**
     * @power 产品管理|能源发生器列表@编辑能源发生器
     */
    public function edit($id)
    {
        $entity = productModel::where('id', $id)->find();
        if (!$entity) {
            $this->error('对象不存在');
        }

        return $this->render('edit', [
            'info' => $entity,
        ]);
    }

    /**
     * @power 产品管理|能源发生器列表@下架能源发生器
     * @method POST
     */
    public function shelve($id)
    {
        $entity = $this->checkInfo($id);
        $entity->status = 0;

        if (!$entity->save()) {
            throw new AdminException('下架失败');
        }
        return json(['code' => 0, 'message' => 'success']);
    }

    private function checkInfo($id)
    {
        $entity = productModel::where('id', $id)->find();
        if (!$entity) {
            throw new AdminException('对象不存在');
        }

        return $entity;
    }

    /**
     * @power 产品管理|能源发生器列表@编辑能源发生器
     */
    public function update(Request $request, $id)
    {
        $entity = $this->checkInfo($id);

        $entity->product_name = $request->post('product_name');
        $entity->rate_min = $request->post('rate_min');
        $entity->rate_max = $request->post('rate_max');
        $entity->yield_min = $request->post('yield_min');
        $entity->yield_max = $request->post('yield_max');
        $entity->price = $request->post('price');
        $entity->period = $request->post('period');
        $entity->jewel_price = $request->post('jewel_price');

        if ($entity->save() === false) {
            throw new AdminException('保存失败');
        }
        return json(['toUrl' => url('/admin/product')]);
    }
}